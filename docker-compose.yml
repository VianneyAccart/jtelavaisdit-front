services:
  jtelavaisdit-front-dev:
    build:
      context: .
      target: dev
    container_name: jtelavaisdit-front-dev
    volumes:
      - .:/app
      - /app/node_modules # Prevent node_modules conflicts
    ports:
      - 4200:4200
  
  jtelavaisdit-front-staging:
    build:
      context: .
      target: runtime
      args:
        CONFIGURATION: staging
    container_name: jtelavaisdit-front-staging
    restart: unless-stopped
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jtelavaisdit-client-staging.rule=Host(`staging.jtelavaisdit.fr`) && PathPrefix(`/`)"
      - "traefik.http.routers.jtelavaisdit-client-staging.entrypoints=websecure"
      - "traefik.http.routers.jtelavaisdit-client-staging.tls.certresolver=letsencrypt"
      - "traefik.http.routers.jtelavaisdit-client-staging.middlewares=auth-basic-staging-front@docker"
      - "traefik.http.middlewares.auth-basic-staging-front.basicauth.users=jtladstagingvps:$$apr1$$eAa/rl.p$$ev75B9QeB4ns2H4fnwB4f/"

  jtelavaisdit-front-prod:
    build:
      context: .
      target: runtime
      args:
        CONFIGURATION: production
    container_name: jtelavaisdit-front-prod
    restart: unless-stopped
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jtelavaisdit-client-prod.rule=Host(`jtelavaisdit.fr`) && PathPrefix(`/`)"
      - "traefik.http.routers.jtelavaisdit-client-prod.entrypoints=websecure"
      - "traefik.http.routers.jtelavaisdit-client-prod.tls.certresolver=letsencrypt"

networks:
  traefik:
    name: traefik_webgateway
    external: true